name: Deploy to Firebase Hosting on push
"on":
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  github-context:
    name: job-context
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

# Testing comment on https://stackoverflow.com/questions/67503656/echo-github-action-environment-variables/67504712?noredirect=1#comment134718086_67504712
  context-variables:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "GITHUB_REPOSITORY_OWNER: $GITHUB_REPOSITORY_OWNER"
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "github.repository: ${{ github.repository }}"
          echo "github.repository_owner: ${{ github.repository_owner }}"
          echo "GITHUB.REPOSITORY: $GITHUB.REPOSITORY"
          echo "GITHUB.REPOSITORY_OWNER: $GITHUB.REPOSITORY_OWNER"
  checkout_install_build:
    runs-on: ubuntu-latest
    steps:
      - name: Make a POST request on process initation
        run: |
          curl -X POST 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "id": ${{ github.run_id }}, "deployment_status": "Syncing repository" }'

      - name: checkout-repo
        uses: actions/checkout@v4

      - name: Make a PATCH request when the dependency installation has started
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Preparing production environment, installing dependencies" }'

      - name: install-dependencies
        run: npm install

      - name: Make a PATCH request when the build process has started
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Building application for the deployment" }'

      - name: build
        env:
          REACT_APP_SUPABASE_URL: ${{secrets.REACT_APP_SUPABASE_URL}}
          REACT_APP_SUPABASE_KEY: ${{secrets.REACT_APP_SUPABASE_KEY}}
          REACT_APP_SECRET_GITHUB_TOKEN: ${{secrets.REACT_APP_SECRET_GITHUB_TOKEN}}
          CI: false
        run: npm run build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  deployment-firebase:
    runs-on: ubuntu-latest
    needs: checkout_install_build
    steps:
      - name: Make a PATCH request when deployment to firebase is started
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Deploying to Firebase" }'

      - name: Checkout Repo
        uses: actions/checkout@v2.3.2

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: deploy-firebase
        id: deploy-firebase
        uses: ipaul1996/firebase-deploy-action@v1.0.0
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_IP_RISINGSTAR }}"
          deploymentType: live
    outputs:
      deploy_url: ${{ steps.deploy-firebase.outputs.deploy_url }}
      deployment_type: ${{ steps.deploy-firebase.outputs.deployment_type }}
      preview_expires: ${{ steps.deploy-firebase.outputs.preview_expires }}

  post_request_on_deployment_failure:
    needs: deployment-firebase
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Make PATCH request on deployment failure
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Failed to deploy the application" }'

  post_request_on_deployment_success:
    needs: deployment-firebase
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Make PATCH request on successful deployment
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Deployment successful", "deployment_type": "${{needs.deployment-firebase.outputs.deployment_type}}", "deploy_url": "${{needs.deployment-firebase.outputs.deploy_url}}", "preview_expires": "${{needs.deployment-firebase.outputs.preview_expires}}" }'